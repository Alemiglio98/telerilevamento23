# Time series analysis
# Baltoro glacier variation

install.packages("raster")
 install.packages("rasterVis")
library(raster)
library(rasterVis)

# library(rgdal)

 setwd("C:/lab/baltoro")


lb_2013 <- raster("Landsat_baltoro_2013.tif")
lb_2016 <- raster("Landsat_baltoro_2016.tif")
lb_2020 <- raster("Landsat_baltoro_2020.tif")
lb_2022 <- raster("Landsat_baltoro_2022.tif")

# par
par(mfrow=c(2,2))
plot(lb_2013)
plot(lb_2016)
plot(lb_2020)
plot(lb_2022)

#correct code until here


# list f files:
#esempio:Landsat_baltoro_2013
rlist <- list.files(pattern="baltoro")
rlist

import <- lapply(rlist,raster)
import

#correct code until here



Baltstk <- stack(import)

plot(Baltstk)

plotRGB(Baltstk, 1, 2, 3, stretch="Lin")
plotRGB(Baltstk, 2, 3, 4, stretch="Lin")
plotRGB(Baltstk, 4, 3, 2, stretch="Lin")

# levelplot(Baltstck)
cl <- colorRampPalette(c("blue","light blue","pink","red"))(100)
plot(Baltstk, col=cl)


levelplot(Baltstk,col.regions=cl, main="Ice loss",
           names.attr=c("2013","2016", "2020", "2022"))
#correct code until here

#------


# Classification of remote sensing data

 

library(raster)
setwd("C:/lab/")
Bt13 <- brick("C:/lab/baltoro/Landsat_baltoro_2013.tif")

plotRGB(Bt13 , 1, 2, 3, stretch="lin")

plotRGB(Bt13 , 1, 2, 3, stretch="hist")

 

# Classifying the solar data

 

# 1. Get all the single values

singlenr <- getValues(Bt13)
singlenr

 

# 2. Classify

kcluster <- kmeans(singlenr, centers = 3)
kcluster


# 3. Set values to a raster on the basis of Bt13

Bt13class <- setValues(Bt13[[1]], kcluster$cluster) # assign new values to a raster object

 

cl <- colorRampPalette(c('yellow','black','red'))(100)

plot(Bt13class, col=cl)

 

#class 1: Shadows
#class 2: Defrosted land
#class 3: Ice/snow

 

frequencies <- freq(Bt13class)
frequencies

tot = 2088083

percentages = frequencies * 100 /  tot

 

#class 3: 29.8%
#class 2: 27.65%
#class 1: 42.55%

#Let's classify the 2022 image


Bt22 <- brick("C:/lab/baltoro/Landsat_baltoro_2022.tif")

plotRGB(Bt22 , 1, 2, 3, stretch="lin")


# 1. Get all the single values

singlenr22 <- getValues(Bt22)
singlenr22

 

# 2. Classify

kcluster <- kmeans(singlenr, centers = 3)
kcluster


# 3. Set values to a raster on the basis of Bt22

Bt22class <- setValues(Bt13[[1]], kcluster$cluster) # assign new values to a raster object

 

cl <- colorRampPalette(c('yellow','black','red'))(100)
plot(Bt22class, col=cl)


#class 1: Ice
#class 2: Defrosted land
#class 3: Shadows

 
frequencies22 <- freq(Bt22class)
frequencies22

tot = 2088083

percentages = frequencies * 100 /  tot

#class 3: 29.8%
#class 1: 42.55
#class 2: 27.65%


#-----

library(raster)

setwd("C:/lab/") # Windows

bt13_b6 <-"C:/lab/baltoro/Baltoro_2013_B6.tif"
# Exercise: import the first file -> defor1_.jpg -> give it the name l1992
bt13 <- brick("C:/lab/baltoro/Landsat_baltoro_2013.tif")

plotRGB(bt13, r=1, g=2, b=3, stretch="lin")

# band1 = NIR
# band2 = red
# band3 = green


stack(bt13, bt13_b6)
btstk<-stack(bt13, bt13_b6)
ndsi = (btstk[[3]] - btstk[[5]]) / (btstk[[3]] + btstk[[5]])
