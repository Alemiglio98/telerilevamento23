# Baltoro glacier variation
# Time series analysis


#packages I will need
install.packages("raster")
install.packages("viridis")
install.packages("ggplot2")


library(raster)
setwd("C:/lab/baltoro")

#get each image and assigne it to name
lb_2013 <- raster("Landsat_baltoro_2013.tif")
lb_2016 <- raster("Landsat_baltoro_2016.tif")
lb_2020 <- raster("Landsat_baltoro_2020.tif")
lb_2022 <- raster("Landsat_baltoro_2022.tif")

#multiplot
par(mfrow=c(2,2))
plot(lb_2013)
plot(lb_2016)
plot(lb_2020)
plot(lb_2022)


# list f files:
#exemple:Landsat_baltoro_2013
rlist <- list.files(pattern="baltoro")
rlist


#Apply a Function over a List or Vector (for x argument)
import <- lapply(rlist,raster)
import

#correct code until here(comment to be deleted)

#stack generation 
Baltstk <- stack(import)

plot(Baltstk)

plotRGB(Baltstk, 1, 2, 3, stretch="Lin")
plotRGB(Baltstk, 2, 3, 4, stretch="Lin")
plotRGB(Baltstk, 4, 3, 2, stretch="Lin")

# levelplot(Baltstck)
cl <- colorRampPalette(c("blue","light blue","pink","red"))(100)
plot(Baltstk, col=cl)


levelplot(Baltstk,col.regions=cl, main="Ice loss",
           names.attr=c("2013","2016", "2020", "2022"))
#correct code until here

#------
# Classification of remote sensing data

 

library(raster)
setwd("C:/lab/")
Bt13 <- brick("C:/lab/baltoro/Landsat_baltoro_2013.tif")

plotRGB(Bt13 , 1, 2, 3, stretch="lin")
plotRGB(Bt13 , 1, 2, 3, stretch="hist")

# 1. Get all the single values
singlenr <- getValues(Bt13)
singlenr
# 2. Classify
kcluster <- kmeans(singlenr, centers = 3)
kcluster
# 3. Set values to a raster on the basis of Bt13
Bt13class <- setValues(Bt13[[1]], kcluster$cluster) # assign new values to a raster object
cl <- colorRampPalette(c('yellow','black','red'))(100)
plot(Bt13class, col=cl)


#class 1: Shadows
#class 2: Defrosted land
#class 3: Ice/snow

#get absolute frequencies
frequencies <- freq(Bt13class)
frequencies

tot = 2088083

percentages = frequencies * 100 /  tot

 

#class 3: 29.8%
#class 2: 27.65%
#class 1: 42.55%

#Let's classify the 2022 image
Bt22 <- brick("C:/lab/baltoro/Landsat_baltoro_2022.tif")
plotRGB(Bt22 , 1, 2, 3, stretch="lin")

# 1. Get all the single values
singlenr22 <- getValues(Bt22)
singlenr22
# 2. Classify
kcluster <- kmeans(singlenr, centers = 3)
kcluster
# 3. Set values to a raster on the basis of Bt22
Bt22class <- setValues(Bt13[[1]], kcluster$cluster) # assign new values to a raster object
cl <- colorRampPalette(c('yellow','black','red'))(100)
plot(Bt22class, col=cl)


#class 1: Ice
#class 2: Defrosted land
#class 3: Shadows

 
frequencies22 <- freq(Bt22class)
frequencies22

tot = 2088083

percentages = frequencies * 100 /  tot

#class 3: 29.8%
#class 1: 42.55
#class 2: 27.65%


#-----
#normalized difference snow index

# let's calculate NDSI
library(raster)
library(ggplot2)
library(viridis)

setwd("C:/lab/") 


#adding band 6 to my raster (do it carefully it's easy to make a mistake!!!!)

#2013
bt13_b6 <-"C:/lab/baltoro/Baltoro_2013_B6.tif"
bt13 <- brick("C:/lab/baltoro/Landsat_baltoro_2013.tif")

plotRGB(bt13, r=1, g=2, b=3, stretch="lin")

# band2 = green
stack(bt13, bt13_b6)
btstk13<-stack(bt13, bt13_b6)
ndsi13 = (btstk13[[2]] - btstk13[[5]]) / (btstk13[[2]] + btstk13[[5]])


#make a dataframe in order to use ggplot
ndsi13_df <- as.data.frame(ndsi13, xy=T)

ggplot() +
geom_raster(ndsi13_df, mapping =aes(x=x, y=y, fill=layer)) +
scale_fill_viridis(option = "viridis") +
ggtitle("NDSI 2013")


#2022
bt22_b6 <-"C:/lab/baltoro/bt22_b6.tif"
bt22 <- brick("C:/lab/baltoro/Landsat_baltoro_2022.tif")

plotRGB(bt22, r=1, g=2, b=3, stretch="lin")

stack(bt22, bt22_b6)
btstk22<-stack(bt22, bt22_b6)
ndsi22 = (btstk22[[2]] - btstk22[[5]]) / (btstk22[[2]] + btstk22[[5]])

ndsi22_df <- as.data.frame(ndsi22, xy=T)

ggplot() +
geom_raster(ndsi22_df, mapping =aes(x=x, y=y, fill=layer)) +
scale_fill_viridis(option = "viridis") +
ggtitle("NDSI 2022")

# NDSI difference between 2013-22
ndsidiff = ndsi13 - ndsi22

# Ndsi as dataframe
ndsidiff_df <- as.data.frame(ndsidiff, xy=T)

ggplot() +
geom_raster(ndsidiff_df, mapping =aes(x=x, y=y, fill=layer)) +
scale_fill_viridis(option = "viridis") +
ggtitle("NDSI difference 2013 2022")






